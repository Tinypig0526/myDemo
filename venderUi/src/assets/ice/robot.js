// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `robot.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var ThybotKioskService = require("exception").ThybotKioskService;
    var Slice = Ice.Slice;

    ThybotKioskService.RobotService = __M.module("ThybotKioskService.RobotService");

    ThybotKioskService.RobotService.LEDSensor = Slice.defineStruct(
        function(value, mask, onValue)
        {
            this.value = value !== undefined ? value : 0;
            this.mask = mask !== undefined ? mask : 0;
            this.onValue = onValue !== undefined ? onValue : 0;
        },
        true,
        function(__os)
        {
            __os.writeInt(this.value);
            __os.writeInt(this.mask);
            __os.writeInt(this.onValue);
        },
        function(__is)
        {
            this.value = __is.readInt();
            this.mask = __is.readInt();
            this.onValue = __is.readInt();
        },
        12, 
        true);

    ThybotKioskService.RobotService.Motor = Slice.defineStruct(
        function(dir, enable, brake)
        {
            this.dir = dir !== undefined ? dir : 0;
            this.enable = enable !== undefined ? enable : 0;
            this.brake = brake !== undefined ? brake : 0;
        },
        true,
        function(__os)
        {
            __os.writeInt(this.dir);
            __os.writeInt(this.enable);
            __os.writeInt(this.brake);
        },
        function(__is)
        {
            this.dir = __is.readInt();
            this.enable = __is.readInt();
            this.brake = __is.readInt();
        },
        12, 
        true);

    ThybotKioskService.RobotService.IO = Slice.defineStruct(
        function(value, onValue)
        {
            this.value = value !== undefined ? value : 0;
            this.onValue = onValue !== undefined ? onValue : 0;
        },
        true,
        function(__os)
        {
            __os.writeInt(this.value);
            __os.writeInt(this.onValue);
        },
        function(__is)
        {
            this.value = __is.readInt();
            this.onValue = __is.readInt();
        },
        8, 
        true);

    ThybotKioskService.RobotService.Position = Slice.defineStruct(
        function(x, y)
        {
            this.x = x !== undefined ? x : 0;
            this.y = y !== undefined ? y : 0;
        },
        true,
        function(__os)
        {
            __os.writeInt(this.x);
            __os.writeInt(this.y);
        },
        function(__is)
        {
            this.x = __is.readInt();
            this.y = __is.readInt();
        },
        8, 
        true);

    ThybotKioskService.RobotService.InfoXY = Slice.defineStruct(
        function(pos, sensorX1, sensorX2, sensorY1, sensorY2, motorX, motorY)
        {
            this.pos = pos !== undefined ? pos : new ThybotKioskService.RobotService.Position();
            this.sensorX1 = sensorX1 !== undefined ? sensorX1 : new ThybotKioskService.RobotService.LEDSensor();
            this.sensorX2 = sensorX2 !== undefined ? sensorX2 : new ThybotKioskService.RobotService.LEDSensor();
            this.sensorY1 = sensorY1 !== undefined ? sensorY1 : new ThybotKioskService.RobotService.LEDSensor();
            this.sensorY2 = sensorY2 !== undefined ? sensorY2 : new ThybotKioskService.RobotService.LEDSensor();
            this.motorX = motorX !== undefined ? motorX : new ThybotKioskService.RobotService.Motor();
            this.motorY = motorY !== undefined ? motorY : new ThybotKioskService.RobotService.Motor();
        },
        true,
        function(__os)
        {
            ThybotKioskService.RobotService.Position.write(__os, this.pos);
            ThybotKioskService.RobotService.LEDSensor.write(__os, this.sensorX1);
            ThybotKioskService.RobotService.LEDSensor.write(__os, this.sensorX2);
            ThybotKioskService.RobotService.LEDSensor.write(__os, this.sensorY1);
            ThybotKioskService.RobotService.LEDSensor.write(__os, this.sensorY2);
            ThybotKioskService.RobotService.Motor.write(__os, this.motorX);
            ThybotKioskService.RobotService.Motor.write(__os, this.motorY);
        },
        function(__is)
        {
            this.pos = ThybotKioskService.RobotService.Position.read(__is, this.pos);
            this.sensorX1 = ThybotKioskService.RobotService.LEDSensor.read(__is, this.sensorX1);
            this.sensorX2 = ThybotKioskService.RobotService.LEDSensor.read(__is, this.sensorX2);
            this.sensorY1 = ThybotKioskService.RobotService.LEDSensor.read(__is, this.sensorY1);
            this.sensorY2 = ThybotKioskService.RobotService.LEDSensor.read(__is, this.sensorY2);
            this.motorX = ThybotKioskService.RobotService.Motor.read(__is, this.motorX);
            this.motorY = ThybotKioskService.RobotService.Motor.read(__is, this.motorY);
        },
        80, 
        true);

    ThybotKioskService.RobotService.InfoEX = Slice.defineStruct(
        function(pos, sensorX1, sensorX2, sensorY1, sensorY2, motorX, motorY, empty, open, close)
        {
            this.pos = pos !== undefined ? pos : new ThybotKioskService.RobotService.Position();
            this.sensorX1 = sensorX1 !== undefined ? sensorX1 : new ThybotKioskService.RobotService.LEDSensor();
            this.sensorX2 = sensorX2 !== undefined ? sensorX2 : new ThybotKioskService.RobotService.LEDSensor();
            this.sensorY1 = sensorY1 !== undefined ? sensorY1 : new ThybotKioskService.RobotService.LEDSensor();
            this.sensorY2 = sensorY2 !== undefined ? sensorY2 : new ThybotKioskService.RobotService.LEDSensor();
            this.motorX = motorX !== undefined ? motorX : new ThybotKioskService.RobotService.Motor();
            this.motorY = motorY !== undefined ? motorY : new ThybotKioskService.RobotService.Motor();
            this.empty = empty !== undefined ? empty : false;
            this.open = open !== undefined ? open : false;
            this.close = close !== undefined ? close : false;
        },
        true,
        function(__os)
        {
            ThybotKioskService.RobotService.Position.write(__os, this.pos);
            ThybotKioskService.RobotService.LEDSensor.write(__os, this.sensorX1);
            ThybotKioskService.RobotService.LEDSensor.write(__os, this.sensorX2);
            ThybotKioskService.RobotService.LEDSensor.write(__os, this.sensorY1);
            ThybotKioskService.RobotService.LEDSensor.write(__os, this.sensorY2);
            ThybotKioskService.RobotService.Motor.write(__os, this.motorX);
            ThybotKioskService.RobotService.Motor.write(__os, this.motorY);
            __os.writeBool(this.empty);
            __os.writeBool(this.open);
            __os.writeBool(this.close);
        },
        function(__is)
        {
            this.pos = ThybotKioskService.RobotService.Position.read(__is, this.pos);
            this.sensorX1 = ThybotKioskService.RobotService.LEDSensor.read(__is, this.sensorX1);
            this.sensorX2 = ThybotKioskService.RobotService.LEDSensor.read(__is, this.sensorX2);
            this.sensorY1 = ThybotKioskService.RobotService.LEDSensor.read(__is, this.sensorY1);
            this.sensorY2 = ThybotKioskService.RobotService.LEDSensor.read(__is, this.sensorY2);
            this.motorX = ThybotKioskService.RobotService.Motor.read(__is, this.motorX);
            this.motorY = ThybotKioskService.RobotService.Motor.read(__is, this.motorY);
            this.empty = __is.readBool();
            this.open = __is.readBool();
            this.close = __is.readBool();
        },
        83, 
        true);

    ThybotKioskService.RobotService.InfoDS = Slice.defineStruct(
        function(pos, sensorX1, sensorX2, sensorY1, sensorY2, mtor, empty, open, close)
        {
            this.pos = pos !== undefined ? pos : new ThybotKioskService.RobotService.Position();
            this.sensorX1 = sensorX1 !== undefined ? sensorX1 : new ThybotKioskService.RobotService.LEDSensor();
            this.sensorX2 = sensorX2 !== undefined ? sensorX2 : new ThybotKioskService.RobotService.LEDSensor();
            this.sensorY1 = sensorY1 !== undefined ? sensorY1 : new ThybotKioskService.RobotService.LEDSensor();
            this.sensorY2 = sensorY2 !== undefined ? sensorY2 : new ThybotKioskService.RobotService.LEDSensor();
            this.mtor = mtor !== undefined ? mtor : new ThybotKioskService.RobotService.Motor();
            this.empty = empty !== undefined ? empty : false;
            this.open = open !== undefined ? open : false;
            this.close = close !== undefined ? close : false;
        },
        true,
        function(__os)
        {
            ThybotKioskService.RobotService.Position.write(__os, this.pos);
            ThybotKioskService.RobotService.LEDSensor.write(__os, this.sensorX1);
            ThybotKioskService.RobotService.LEDSensor.write(__os, this.sensorX2);
            ThybotKioskService.RobotService.LEDSensor.write(__os, this.sensorY1);
            ThybotKioskService.RobotService.LEDSensor.write(__os, this.sensorY2);
            ThybotKioskService.RobotService.Motor.write(__os, this.mtor);
            __os.writeBool(this.empty);
            __os.writeBool(this.open);
            __os.writeBool(this.close);
        },
        function(__is)
        {
            this.pos = ThybotKioskService.RobotService.Position.read(__is, this.pos);
            this.sensorX1 = ThybotKioskService.RobotService.LEDSensor.read(__is, this.sensorX1);
            this.sensorX2 = ThybotKioskService.RobotService.LEDSensor.read(__is, this.sensorX2);
            this.sensorY1 = ThybotKioskService.RobotService.LEDSensor.read(__is, this.sensorY1);
            this.sensorY2 = ThybotKioskService.RobotService.LEDSensor.read(__is, this.sensorY2);
            this.mtor = ThybotKioskService.RobotService.Motor.read(__is, this.mtor);
            this.empty = __is.readBool();
            this.open = __is.readBool();
            this.close = __is.readBool();
        },
        71, 
        true);

    ThybotKioskService.RobotService.InfoCG = Slice.defineStruct(
        function(sensorUnfold1, sensorUnfold2, sensorFold1, sensorFold2, motorFold, motorJoin, motorBelt, empty, front, back)
        {
            this.sensorUnfold1 = sensorUnfold1 !== undefined ? sensorUnfold1 : new ThybotKioskService.RobotService.LEDSensor();
            this.sensorUnfold2 = sensorUnfold2 !== undefined ? sensorUnfold2 : new ThybotKioskService.RobotService.LEDSensor();
            this.sensorFold1 = sensorFold1 !== undefined ? sensorFold1 : new ThybotKioskService.RobotService.LEDSensor();
            this.sensorFold2 = sensorFold2 !== undefined ? sensorFold2 : new ThybotKioskService.RobotService.LEDSensor();
            this.motorFold = motorFold !== undefined ? motorFold : new ThybotKioskService.RobotService.Motor();
            this.motorJoin = motorJoin !== undefined ? motorJoin : new ThybotKioskService.RobotService.Motor();
            this.motorBelt = motorBelt !== undefined ? motorBelt : new ThybotKioskService.RobotService.Motor();
            this.empty = empty !== undefined ? empty : 0;
            this.front = front !== undefined ? front : false;
            this.back = back !== undefined ? back : false;
        },
        true,
        function(__os)
        {
            ThybotKioskService.RobotService.LEDSensor.write(__os, this.sensorUnfold1);
            ThybotKioskService.RobotService.LEDSensor.write(__os, this.sensorUnfold2);
            ThybotKioskService.RobotService.LEDSensor.write(__os, this.sensorFold1);
            ThybotKioskService.RobotService.LEDSensor.write(__os, this.sensorFold2);
            ThybotKioskService.RobotService.Motor.write(__os, this.motorFold);
            ThybotKioskService.RobotService.Motor.write(__os, this.motorJoin);
            ThybotKioskService.RobotService.Motor.write(__os, this.motorBelt);
            __os.writeInt(this.empty);
            __os.writeBool(this.front);
            __os.writeBool(this.back);
        },
        function(__is)
        {
            this.sensorUnfold1 = ThybotKioskService.RobotService.LEDSensor.read(__is, this.sensorUnfold1);
            this.sensorUnfold2 = ThybotKioskService.RobotService.LEDSensor.read(__is, this.sensorUnfold2);
            this.sensorFold1 = ThybotKioskService.RobotService.LEDSensor.read(__is, this.sensorFold1);
            this.sensorFold2 = ThybotKioskService.RobotService.LEDSensor.read(__is, this.sensorFold2);
            this.motorFold = ThybotKioskService.RobotService.Motor.read(__is, this.motorFold);
            this.motorJoin = ThybotKioskService.RobotService.Motor.read(__is, this.motorJoin);
            this.motorBelt = ThybotKioskService.RobotService.Motor.read(__is, this.motorBelt);
            this.empty = __is.readInt();
            this.front = __is.readBool();
            this.back = __is.readBool();
        },
        90, 
        true);
    Slice.defineDictionary(ThybotKioskService.RobotService, "PollInfo", "PollInfoHelper", "Ice.StringHelper", "Ice.StringHelper", false, undefined, undefined);

    ThybotKioskService.RobotService.RobotInterface = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::ThybotKioskService::RobotService::RobotInterface"
        ],
        -1, undefined, undefined, false);

    ThybotKioskService.RobotService.RobotInterfacePrx = Slice.defineProxy(Ice.ObjectPrx, ThybotKioskService.RobotService.RobotInterface.ice_staticId, undefined);

    Slice.defineOperations(ThybotKioskService.RobotService.RobotInterface, ThybotKioskService.RobotService.RobotInterfacePrx,
    {
        "initRobot": [, , , , , [1], [[3]], , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "openDS": [, , , , , , , , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "closeDS": [, , , , , [1], , , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "getPOS": [, , , , , [3], , , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "goto": [, , , , , [3], [[3]], , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "fetch": [, , , , , [1], [[7]], , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "cgEmpty": [, , , , , [1], , , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "gotoDS": [, , , , , [3], , , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "gotoRow": [, , , , , [3], [[7]], , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "readQRCode": [, , , , , [7], , , , , ],
        "closeQRReader": [, , , , , [1], , , , , ],
        "ledControl": [, , , , , , [[1]], , , , ],
        "setTempreture": [, , , , , , [[3]], , , , ],
        "getTempreture": [, , , , , [3], , , , , ],
        "compressorControl": [, , , , , , [[1]], , , , ],
        "openFrontDoor": [, , , , , [1], , , , , ],
        "closeFrontDoor": [, , , , , , , , , , ],
        "getXY": [, , , , , [ThybotKioskService.RobotService.Position], , , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "goXY": [, , , , , [ThybotKioskService.RobotService.Position], [[3], [3], [3], [3], [3], [3], [3]], , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "gotoEX": [, , , , , , , , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "closeDoors": [, , , , , , , , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "foldCG": [, , , , , , , , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "unfoldCG": [, , , , , , , , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "rollBeltCG": [, , , , , , [[1], [3]], , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "rollJoinMotorCG": [, , , , , , [[3], [3]], , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "recycle": [, , , , , [1], , , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "gotoSlot": [, , , , , , [[7]], , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "openInnerDS": [, , , , , , , , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "closeInnerDS": [, , , , , , , , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "openOutterDS": [, , , , , , , , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "closeOutterDS": [, , , , , , , , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "frontDoorLockerOff": [, , , , , , , , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "frontDoorLockerOn": [, , , , , , , , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "innerDoorLockerOff": [, , , , , , , , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "innerDoorLockerOn": [, , , , , , , , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "slot2DS": [, , , , , , [[7]], , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "DS2Slot": [, , , , , , [[7]], , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "dispenseEmpty": [, , , , , [1], , , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "itemOverHeight": [, , , , , [1], , , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "detectItem": [, , , , , [1], [[7]], , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "initCG": [, , , , , , , , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "initXY": [, , , , , , , , 
        [
            ThybotKioskService.RobotException
        ], , ],
        "setParameter": [, , , , , , [[7], [3]], , , , ],
        "getParameter": [, , , , , [3], [[7]], , , , ],
        "poll": [, , , , , ["ThybotKioskService.RobotService.PollInfoHelper"], , , , , ]
    });
    exports.ThybotKioskService = ThybotKioskService;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : this.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : this));
